
- name: create directory for certificates
  become: true
  become_user: root
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: hadoop
    mode: 0755
  with_items:
    - "{{ server_certs_dir }}"
    - "{{ client_certs_dir }}"

- name: create root CA certificate (local)
  delegate_to: localhost
  command: >
    openssl req
      -new
      -x509
      -sha256
      -newkey "rsa:2048"
      -subj "{{ certs_ca_subject }}"
      -keyout "{{ certs_ca_key }}"
      -out "{{ certs_ca_cert }}"
      -days "{{ certs_ca_days }}"
      -passin "pass:{{ certs_ca_password }}"
      -passout "pass:{{ certs_ca_password }}"
  args:
    chdir: "{{ server_certs_dir }}"
    creates: "{{ certs_ca_cert }}"
  run_once: true
  when: certs_use_local_ca
  become: true
  become_user: root

- name: create keystore file
  become: true
  become_user: root
  command: >
    keytool -genkeypair
      -alias "{{ ansible_fqdn }}"
      -dname "CN={{ ansible_fqdn }},{{ certs_jks_subject_suffix }}"
      -keystore "{{ certs_jks_file }}"
      -keypass "{{ certs_jks_key_password }}"
      -storepass "{{ certs_jks_store_password }}"
      -keyalg RSA
      -keysize "{{ certs_jks_keysize }}"
      -ext "SAN=dns:{{ ansible_fqdn }}"
  args:
    chdir: "{{ server_certs_dir }}"
    creates: "{{ certs_jks_file }}"


- name: export the public key to certificate file
  become: true
  become_user: root
  command: >
    keytool -export
      -alias "{{ ansible_fqdn }}"
      -keystore "{{ certs_jks_file }}"
      -keypass "{{ certs_jks_key_password }}"
      -storepass "{{ certs_jks_store_password }}"
      -rfc -file "{{ cert_pub_key }}"
  args:
    chdir: "{{ server_certs_dir }}"
    creates: "{{ cert_pub_key }}"

- name: import the certificate to truststore
  become: true
  become_user: root
  command: >
    keytool -import
      -noprompt
      -alias "{{ ansible_fqdn }}"
      -file "{{ cert_pub_key }}"
      -keystore "{{ truststore_file }}"
      -storepass "{{ certs_jks_store_password }}"
  args:
    chdir: "{{ server_certs_dir }}"
    creates: "{{ truststore_file }}"

- name: import the certificate to cacertstore
  become: true
  become_user: root
  command: >
    keytool -import
      -noprompt
      -alias "{{ ansible_fqdn }}"
      -file "{{ cert_pub_key }}"
      -keystore "{{ ca_cert_path }}"
      -storepass "{{ certs_jks_store_password }}"
  args:
    chdir: "{{ server_certs_dir }}"

- name: change ownership of keystore file
  become: true
  become_user: root
  file:
    path: "{{ server_certs_dir }}/{{ certs_jks_file }}"
    owner: root
    group: root
    mode: 0644
